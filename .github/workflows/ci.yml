name: ci

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  NUGET_PACKAGES: '${{ github.workspace }}/.nuget/packages'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          fetch-depth: 0

      - name: NuGet Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: |
            ${{ env.NUGET_PACKAGES }}
            .nuke/temp
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/global.json', '**/*.csproj', '**/*.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4
        id: setup-dotnet

      - name: Restore .NET Tools
        run: |
          dotnet tool restore

      - name: Build, Test and Pack
        run: |
          dotnet nuke

      - name: Upload Coverage
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          directory: ${{ github.workspace }}/artifacts/coverage
          files: "*.cobertura.xml"

      - name: Upload Packages
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: packages
          path: ${{ github.workspace }}/artifacts/packages
          if-no-files-found: error

      - name: Output .NET Tool Versions
        id: tool-versions
        run: |
          dotnet_validate_version=$(jq -r '.tools["dotnet-validate"].version' ./.config/dotnet-tools.json)
          echo "dotnet-validate-version=$dotnet_validate_version" >> $GITHUB_OUTPUT

      - name: Publish NuGet packages
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          dotnet nuke Publish \
            --nuget-api-key $NUGET_API_KEY
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    outputs:
      dotnet-sdk-version: ${{ steps.setup-dotnet.outputs.dotnet-version }}
      dotnet-validate-version: ${{ steps.tool-versions.outputs.dotnet-validate-version }}

  validate-packages:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Packages
        uses: actions/download-artifact@v4
        with:
          name: packages

      - name: Setup .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4
        with:
          dotnet-version: ${{ needs.build.outputs.dotnet-sdk-version }}

      - name: Install .NET Tools
        run: |
          dotnet tool install --global dotnet-validate --version $DOTNET_VALIDATE_VERSION
        env:
          DOTNET_VALIDATE_VERSION: ${{ needs.build.outputs.dotnet-validate-version }}

      - name: Validate Packages
        run: |
          fail_count=0

          for file in "${{ github.workspace }}/packages"/*.nupkg; do
            dotnet validate package local $file
            if [ $? -ne 0 ]; then
              ((fail_count++))
            fi
          done

          if [ $fail_count -ne 0 ]; then
            echo "::error::Validation failed for $fail_count NuGet package(s)"
            exit 1
          fi
